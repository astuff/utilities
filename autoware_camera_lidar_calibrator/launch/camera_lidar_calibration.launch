<launch>
    <arg name="image_src" default="/image_raw" />
    <arg name="camera_info_src" default="/camera_info" />
    <arg name="camera_id" default="/" />
    <arg name="intrinsics_file" />
    <arg name="compressed_stream" default="false" />
    <arg name="target_frame" default="velodyne"/>
    <arg name="camera_frame" default="camera"/>
    <arg name="use_rqt_image_view" default="false" />

    <node if="$(arg compressed_stream)" name="decompress" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_id)/$(arg image_src) raw out:=/$(arg camera_id)/$(arg image_src)" />

    <node pkg="calibration_publisher" type="calibration_publisher" name="calibration_publisher" ns="$(arg camera_id)">
        <param name="register_lidar2camera_tf" type="bool" value="false"/>
        <param name="publish_extrinsic_mat" type="bool" value="false"/>
        <param name="publish_camera_info" type="bool" value="true"/>
        <param name="image_topic_src" value="$(arg image_src)"/>
        <param name="calibration_file" value="$(arg intrinsics_file)"/>
        <param name="target_frame" type="str" value="$(arg target_frame)"/>
        <param name="camera_frame" type="str" value="$(arg camera_frame)"/>
    </node>

    <node pkg="image_processor" type="image_rectifier" name="rectifier" ns="$(arg camera_id)" output="screen">
        <param name="image_src" value="$(arg image_src)" />
        <param name="camera_info_src" value="$(arg camera_info_src)" />
    </node>

    <!-- JSK image_view2, unable to shrink image size -->
    <!-- Remap camera_info because the unrectified image points should be used for calibration. -->
    <node unless="$(arg use_rqt_image_view)" pkg="image_view2" type="image_view2"
        name="image_view2" ns="$(arg camera_id)" output="screen" args="/image:=$(arg image_src) camera_info:=camera_info_unused"/>

    <!-- RQT image_view, able to shrink size of image if camera resolution is large -->
    <node if="$(arg use_rqt_image_view)" pkg="rqt_image_view" type="rqt_image_view"
        name="rqt_image_view" ns="$(arg camera_id)" output="screen" args="$(arg image_src)" />

    <node pkg="autoware_camera_lidar_calibrator" type="autoware_camera_lidar_calibration_node" name="autoware_camera_lidar_calibration_node" ns="$(arg camera_id)" output="screen">
        <param name="image_src" value="$(arg image_src)" />
        <param name="camera_info_src" value="$(arg camera_info_src)" />
        <param name="use_rqt_image_view" value="$(arg use_rqt_image_view)" />
    </node>
</launch>
